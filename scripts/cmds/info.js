const os = require("os");
const moment = require("moment-timezone");
const axios = require("axios");
const fs = require("fs");
const path = require("path");

// ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø config.dev.json ‡¶•‡ßá‡¶ï‡ßá ‡¶≤‡ßã‡¶°
const config = require("../../config.dev.json");

module.exports = {
  config: {
    name: "info",
    version: "3.5.1",
    author: "Irfan420x",
    countDown: 5,
    role: 0,
    shortDescription: "üìä ‡¶¨‡¶ü ‡¶á‡¶®‡¶´‡ßã ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá (config ‡¶•‡ßá‡¶ï‡ßá)",
    longDescription: "PREFIX, Bot Name, VERSION, OWNER, Thread ‡¶∏‡¶¶‡¶∏‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶∏‡¶π ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá",
    category: "info",
    guide: "{pn}"
  },

  onStart: async function ({ api, event }) {
    try {
      // config ‡¶•‡ßá‡¶ï‡ßá ‡¶§‡¶•‡ßç‡¶Ø
      const prefix = config.prefix;
      const botName = config.nickNameBot;
      const version = config.version || "3.5.1";
      const owner = config.developers?.[0] || "Unknown";
      const timeZone = config.timeZone || "Asia/Dhaka";
      const supportLink = "https://www.facebook.com/psychopath.irfan.io";

      // Uptime ‡¶ì ‡¶∏‡¶Æ‡ßü
      const uptime = new Date(process.uptime() * 1000).toISOString().substr(11, 8);
      const now = moment().tz(timeZone).format("dddd, MMMM Do YYYY ‚Ä¢ hh:mm:ss A");

      // System Info
      const usedMem = (process.memoryUsage().heapUsed / 1024 / 1024).toFixed(2);
      const totalMem = (os.totalmem() / 1024 / 1024).toFixed(2);
      const cpuModel = os.cpus()[0].model;

      // Thread Info
      let threadName = "This Chat";
      let memberCount = null;
      if (event.threadID && api.getThreadInfo) {
        const ti = await api.getThreadInfo(event.threadID);
        threadName = ti.threadName || "Unnamed";
        memberCount = ti.participantIDs.length;
      }

      // Image download
      const imageUrl = "https://i.postimg.cc/zXD6CQw2/06f1e3b2-5b1e-46f2-8ef6-4f871f5f3a3d.jpg";
      const tmpPath = path.join(__dirname, "tmp_info.jpg");
      const res = await axios.get(imageUrl, { responseType: "arraybuffer" });
      fs.writeFileSync(tmpPath, Buffer.from(res.data, "binary"));

      // BOT INFO Block
      const botInfo =
`‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë           ü§ñ BOT INFORMATION           ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
üìõ Name         : ${botName}
üîñ Prefix       : ${prefix}
üÜö Version      : ${version}
‚öôÔ∏è Language     : Node.js
üïí Uptime       : ${uptime}
üìä RAM Usage    : ${usedMem}MB / ${totalMem}MB
üß¨ CPU Model    : ${cpuModel}
üìÖ Time         : ${now}
`;

      // OWNER INFO Block
      const ownerInfo =
`‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë           üëë OWNER INFORMATION        ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
üõ°Ô∏è Owner ID     : ${owner}
üåê Support Link : ${supportLink}
`;

      // THREAD INFO Block
      let threadBlock = "";
      if (memberCount !== null) {
        threadBlock =
`‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë          üí¨ THREAD INFORMATION        ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
üí¨ Thread Name  : ${threadName}
üë• Members      : ${memberCount}
üÜî Thread ID    : ${event.threadID}
`;
      }

      const finalMsg = `${botInfo}\n${ownerInfo}\n${threadBlock}`;

      // Send with image
      api.sendMessage({
        body: finalMsg,
        attachment: fs.createReadStream(tmpPath)
      }, event.threadID, () => fs.unlinkSync(tmpPath));

    } catch (err) {
      console.error("‚ùå Info command error:", err);
      api.sendMessage("‚ùå ‡¶¨‡¶ü ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá!", event.threadID);
    }
  }
};
